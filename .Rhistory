PR <- c("BJPR71FL", "BFPR62FL", "BUPR71FL", "CMPR71FL", "TDPR71FL",
"CDPR61FL", "CIPR81FL", "ETPR81FL", "GMPR81FL",
"GHPR72FL", "GNPR71FL", "LSPR71FL", "LBPR7AFL", "MDPR81FL",
"MWPR61FL", "MLPR7AFL", "MZPR62FL", "NMPR61FL", "NIPR61FL", "NGPR7BFL",
"RWPR81FL", "SNPR81FL", "SLPR61FL", "TZPR63FL", "TGPR61FL",
"UGPR61FL", "ZMPR71FL", "ZWPR72FL")
IR <- c("BJIR71FL", "BFIR62FL", "BUIR71FL", "CMIR71FL", "TDIR71FL",
"CDIR61FL", "CIIR81FL", "ETIR81FL", "GMIR81FL",
"GHIR72FL", "GNIR71FL", "LSIR71FL", "LBIR7AFL", "MDIR81FL",
"MWIR61FL", "MLIR7AFL", "MZIR62FL", "NMIR61FL", "NIIR61FL", "NGIR7BFL",
"RWIR81FL", "SNIR81FL", "SLIR61FL", "TZIR63FL", "TGIR61FL",
"UGIR61FL", "ZMIR71FL", "ZWIR72FL")
file_hr <- function(data) {
data_hr <- read_dta(paste0("../Donnée/",data,".DTA"))
data_hr_sub <- data_hr %>%
select(hhid, hv000, hv001, hv002, hv003,hv005,hv025, hv220, hv270, starts_with("hv105_"), starts_with("hv104_"), starts_with("hv106_"), starts_with("hv107_"), starts_with("hv108_"), starts_with("hv115_"), starts_with("hv116_"))
return(data_hr_sub)
}
data_hr=map(HR,file_hr)
View(data_hr)
data_hr_sub=map(HR,file_hr)
View(data_hr_sub)
HR <- c("CIHR81FL", "ZWHR52FL")
file_hr <- function(data) {
data_hr <- read_dta(paste0("../Donnée/",data,".DTA"))
data_hr_sub <- data_hr %>%
select(hhid, hv000, hv001, hv002, hv003,hv005,hv025, hv220, hv270, starts_with("hv105_"), starts_with("hv104_"), starts_with("hv106_"), starts_with("hv107_"), starts_with("hv108_"), starts_with("hv115_"), starts_with("hv116_"))
return(data_hr_sub)
}
data_hr_sub=map(HR,file_hr)
View(data_hr_sub)
file_hr <- function(data) {
data_hr <- read_dta(paste0("../Donnée/",data,".DTA"))
data_hr <- data_hr %>%
select(hhid, hv000, hv001, hv002, hv003,hv005,hv025, hv220, hv270, starts_with("hv105_"), starts_with("hv104_"), starts_with("hv106_"), starts_with("hv107_"), starts_with("hv108_"), starts_with("hv115_"), starts_with("hv116_"))
return(data_hr)
}
data_hr_sub=map(HR,file_hr)
View(data_hr_sub)
View(data_hr_sub)
file_hr <- function(data) {
data_hr <- read_dta(paste0("../Donnée/",data,".DTA")) %>%
#data_hr <- data_hr %>%
select(hhid, hv000, hv001, hv002, hv003,hv005,hv025, hv220, hv270, starts_with("hv105_"), starts_with("hv104_"), starts_with("hv106_"), starts_with("hv107_"), starts_with("hv108_"), starts_with("hv115_"), starts_with("hv116_"))
return(data_hr)
}
data_hr=map(HR,file_hr)
View(data_hr)
file_hr <- function(data) {
data_hr <- readRDS(paste0("../../../Data/DHS/",data,".rds"))
data_hr_sub <- data_hr %>%
select(hhid, hv000, hv001, hv002, hv003,hv005,hv025, hv220, hv270, starts_with("hv105_"), starts_with("hv104_"), starts_with("hv106_"), starts_with("hv107_"), starts_with("hv108_"), starts_with("hv115_"), starts_with("hv116_"))
return(data_hr_sub)
}
data_hr <- map(HR,file_hr)
data_hr <- read_rds(paste0("../../../Data/DHS/",data,".rds"))
file_hr <- function(data) {
data_hr <- read_rds(paste0("../../../Data/DHS/",data,".rds"))
data_hr_sub <- data_hr %>%
select(hhid, hv000, hv001, hv002, hv003,hv005,hv025, hv220, hv270, starts_with("hv105_"), starts_with("hv104_"), starts_with("hv106_"), starts_with("hv107_"), starts_with("hv108_"), starts_with("hv115_"), starts_with("hv116_"))
return(data_hr_sub)
}
data_hr <- map(HR,file_hr)
install.packages("here")
file_path <- here::here("Data", "DHS", "BFHR81DT.rds")
print(file_path)
data_test <- readRDS(file_path)
print(file_path)
data_test <- readRDS(file_path)
here::here()
here::here("Data")
here::here("Data", "DHS")
here::here()
here::here()
file_hr <- function(data) {
#  data_hr <- read_rds(paste0("../../../Data/DHS/",data,".rds"))
data_hr <- read_rds(paste0(here::here("Data", "DHS"),data,".rds"))
data_hr_sub <- data_hr %>%
select(hhid, hv000, hv001, hv002, hv003,hv005,hv025, hv220, hv270, starts_with("hv105_"), starts_with("hv104_"), starts_with("hv106_"), starts_with("hv107_"), starts_with("hv108_"), starts_with("hv115_"), starts_with("hv116_"))
return(data_hr_sub)
}
data_hr <- map(HR,file_hr)
file_hr("BFHR81DT")
file_hr("CIHR81FL")
paste0(here::here("Data", "DHS"),data,".rds")
paste0(here::here("Data", "DHS"),"data",".rds")
paste0(here::here("Data", "DHS",),"data",".rds")
paste0(here::here("Data", "DHS/"),"data",".rds")
paste0(here::here("Data", "DHS/"),"CIHR81FL",".rds")
readRDS(paste0(here::here("Data", "DHS/"),"CIHR81FL",".rds"))
file_hr <- function(data) {
data_hr <- read_rds(paste0("../../../Data/DHS/",data,".rds"))
data_hr_sub <- data_hr %>%
select(hhid, hv000, hv001, hv002, hv003,hv005,hv025, hv220, hv270, starts_with("hv105_"), starts_with("hv104_"), starts_with("hv106_"), starts_with("hv107_"), starts_with("hv108_"), starts_with("hv115_"), starts_with("hv116_"))
return(data_hr_sub)
}
file_hr("CIHR81FL")
read_rds(paste0("../../../Data/DHS/","CIHR81FL",".rds"))
paste0("../../../Data/DHS/","BFHR81DT",".rds")
readRDS(paste0("../../../Data/DHS/","CIHR81FL",".rds"))
readRDS("../../../Data/DHS/CIHR81FL.rds")
readRDS("../../../Data/DHS/CIHR81DT.rds")
readRDS(paste0("../../../Data/DHS/","CIHR81DT",".rds"))
file_hr <- function(data) {
data_hr <- read_rds(paste0("../../../Data/DHS/",data,".rds"))
data_hr_sub <- data_hr %>%
select(hhid, hv000, hv001, hv002, hv003,hv005,hv025, hv220, hv270, starts_with("hv105_"), starts_with("hv104_"), starts_with("hv106_"), starts_with("hv107_"), starts_with("hv108_"), starts_with("hv115_"), starts_with("hv116_"))
return(data_hr_sub)
}
data_hr <- map(HR,file_hr)
file_hr <- function(data) {
data_hr <- readRDS(paste0("../../../Data/DHS/",data,".rds"))
data_hr_sub <- data_hr %>%
select(hhid, hv000, hv001, hv002, hv003,hv005,hv025, hv220, hv270, starts_with("hv105_"), starts_with("hv104_"), starts_with("hv106_"), starts_with("hv107_"), starts_with("hv108_"), starts_with("hv115_"), starts_with("hv116_"))
return(data_hr_sub)
}
data_hr <- map(HR,file_hr)
file_hr("CIHR81DT")
file_hr("ZWHR52FL")
file_hr("ZWHR52DT")
HR <- c("CIHR81DT", "ZWHR52DT")
file_hr <- function(data) {
data_hr <- readRDS(paste0("../../../Data/DHS/",data,".rds"))
data_hr_sub <- data_hr %>%
select(hhid, hv000, hv001, hv002, hv003,hv005,hv025, hv220, hv270, starts_with("hv105_"), starts_with("hv104_"), starts_with("hv106_"), starts_with("hv107_"), starts_with("hv108_"), starts_with("hv115_"), starts_with("hv116_"))
return(data_hr_sub)
}
data_hr <- map(HR,file_hr)
file_hr("CIHR81DT")
file_hr("ZWHR52DT")
HR <- c("CIHR81DT", "ZWHR72DT")
file_hr("CIHR81DT")
file_hr("ZWHR72DT")
file_hr <- function(data) {
data_hr <- readRDS(paste0("../../../Data/DHS/",data,".rds"))
data_hr_sub <- data_hr %>%
select(hhid, hv000, hv001, hv002, hv003,hv005,hv025, hv220, hv270, starts_with("hv105_"), starts_with("hv104_"), starts_with("hv106_"), starts_with("hv107_"), starts_with("hv108_"), starts_with("hv115_"), starts_with("hv116_"))
return(data_hr_sub)
}
data_hr <- map(HR,file_hr)
file_hr <- function(data) {
data_hr <- read_rds(paste0("../../../Data/DHS/",data,".rds"))
data_hr_sub <- data_hr %>%
select(hhid, hv000, hv001, hv002, hv003,hv005,hv025, hv220, hv270, starts_with("hv105_"), starts_with("hv104_"), starts_with("hv106_"), starts_with("hv107_"), starts_with("hv108_"), starts_with("hv115_"), starts_with("hv116_"))
return(data_hr_sub)
}
data_hr <- map(HR,file_hr)
HR <- c("CIHR81DT", "ZWHR72DT")
file_hr <- function(data) {
data_hr <- readRDS(paste0("../../../Data/DHS/",data,".rds"))
data_hr_sub <- data_hr %>%
select(hhid, hv000, hv001, hv002, hv003,hv005,hv025, hv220, hv270, starts_with("hv105_"), starts_with("hv104_"), starts_with("hv106_"), starts_with("hv107_"), starts_with("hv108_"), starts_with("hv115_"), starts_with("hv116_"))
return(data_hr_sub)
}
file_hr("CIHR81DT")
CIHR81DT <- file_hr("CIHR81DT") %>%
select(hhid)
View(CIHR81DT)
CIHR81DT <- file_hr("CIHR81DT") %>%
select(hhid, starts_with("hv105_"))
View(CIHR81DT)
data_hr <- map(HR,file_hr)
getwd()
rm(BJPR71DT.rds)
# install.packages("rdhs")
rm(list = ls())
library(tidyverse)
library(tidyr)
library(rdhs)
library(haven)
#DHS credentials:
set_rdhs_config(email = "visseho09@yahoo.fr",
project = "Reproductive health behavior and child survival in developing countries",
config_path = "~/.rdhs.json",
global = TRUE,
verbose_download = TRUE)
#Finding the right datasets and relevant info:
datasets <- dhs_datasets(
countryIds = c("ZW","ZM","UG","TZ","TG", "ZA", "SZ","SL","SN","RW","NG","NI","NM","MZ", "MR", "ML","MW", "MD", "LB","LS","KE","GN","GH","GM","GA", "ET","CI","CD","CG","KM","TD","CM","BU","BF","BJ","BF"),
selectSurveys = T,
surveyIds = NULL,
surveyYear = NULL,
surveyYearStart = NULL,
surveyYearEnd = NULL,
surveyType = "DHS",
fileFormat = "stata",
fileType = c("HR", "IR","PR"),
f = NULL,
returnFields = NULL,
perPage = NULL,
page = NULL,
client = NULL,
force = FALSE,
all_results = TRUE
) %>%
select(CountryName, SurveyYear, SurveyId, FileType, FileName) %>%
group_by(CountryName) %>%
filter(SurveyYear == max(SurveyYear)) %>%
ungroup()
#Getting datasets
downloads <- get_datasets(datasets$FileName, download_option = "rds")
View(datasets)
#DHS credentials:
set_rdhs_config(email = "visseho09@yahoo.fr",
project = "Reproductive health behavior and child survival in developing countries",
config_path = "~/.rdhs.json",
global = TRUE,
verbose_download = TRUE)
# install.packages("rdhs")
rm(list = ls())
library(tidyverse)
library(tidyr)
library(rdhs)
library(haven)
#DHS credentials:
set_rdhs_config(email = "visseho09@yahoo.fr",
project = "Reproductive health behavior and child survival in developing countries",
config_path = "~/.rdhs.json",
global = TRUE,
verbose_download = TRUE)
datasets <- dhs_datasets(
countryIds = c("ZW","ZM","UG","TZ","TG", "ZA", "SZ","SL","SN","RW","NG","NI","NM","MZ", "MR", "ML","MW", "MD", "LB","LS","KE","GN","GH","GM","GA", "ET","CI","CD","CG","KM","TD","CM","BU","BF","BJ","BF", "AO"),
selectSurveys = T,
surveyIds = NULL,
surveyYear = NULL,
surveyYearStart = NULL,
surveyYearEnd = NULL,
surveyType = "DHS",
fileFormat = "stata",
fileType = c("HR", "IR","PR"),
f = NULL,
returnFields = NULL,
perPage = NULL,
page = NULL,
client = NULL,
force = FALSE,
all_results = TRUE
) %>%
select(CountryName, SurveyYear, SurveyId, FileType, FileName) %>%
group_by(CountryName) %>%
filter(SurveyYear == max(SurveyYear)) %>%
ungroup()
#Getting datasets
downloads <- get_datasets(datasets$FileName, download_option = "rds")
#DHS credentials:
set_rdhs_config(email = "isseho09@yahoo.fr",
project = "Reproductive health behavior and child survival in developing countries",
config_path = "~/.rdhs.json",
global = TRUE,
verbose_download = TRUE)
# install.packages("rdhs")
rm(list = ls())
library(tidyverse)
library(tidyr)
library(rdhs)
library(haven)
#DHS credentials:
set_rdhs_config(email = "visseho09@yahoo.fr",
project = "Reproductive health behavior and child survival in developing countries",
config_path = "~/.rdhs.json",
global = TRUE,
verbose_download = TRUE)
datasets <- dhs_datasets(
countryIds = c("ZW","ZM","UG","TZ","TG", "ZA", "SZ","SL","SN","RW","NG","NI","NM","MZ", "MR", "ML","MW", "MD", "LB","LS","KE","GN","GH","GM","GA", "ET","CI","CD","CG","KM","TD","CM","BU","BF","BJ","BF", "AO"),
selectSurveys = T,
surveyIds = NULL,
surveyYear = NULL,
surveyYearStart = NULL,
surveyYearEnd = NULL,
surveyType = "DHS",
fileFormat = "stata",
fileType = c("HR", "IR","PR"),
f = NULL,
returnFields = NULL,
perPage = NULL,
page = NULL,
client = NULL,
force = FALSE,
all_results = TRUE
) %>%
select(CountryName, SurveyYear, SurveyId, FileType, FileName) %>%
group_by(CountryName) %>%
filter(SurveyYear == max(SurveyYear)) %>%
ungroup()
#Getting datasets
downloads <- get_datasets(datasets$FileName, download_option = "rds")
?get_rdhs_config
get_rdhs_config()
#DHS credentials:
set_rdhs_config(email = "visseho09@yahoo.fr",
project = "Reproductive health behavior and child survival in developing countries",
config_path = "~/.rdhs.json",
global = TRUE,
verbose_download = TRUE,
cache_path = F)
#DHS credentials:
set_rdhs_config(email = "visseho09@yahoo.fr",
project = "Reproductive health behavior and child survival in developing countries",
config_path = "~/.rdhs.json",
global = TRUE,
verbose_download = TRUE,
cache_path = FALSE)
?set_rdhs_config
#DHS credentials:
set_rdhs_config(email = "visseho09@yahoo.fr",
project = "Reproductive health behavior and child survival in developing countries",
config_path = "~/.rdhs.json",
global = TRUE,
verbose_download = TRUE,
password_prompt = TRUE)
datasets <- dhs_datasets(
countryIds = c("ZW","ZM","UG","TZ","TG", "ZA", "SZ","SL","SN","RW","NG","NI","NM","MZ", "MR", "ML","MW", "MD", "LB","LS","KE","GN","GH","GM","GA", "ET","CI","CD","CG","KM","TD","CM","BU","BF","BJ","BF", "AO"),
selectSurveys = T,
surveyIds = NULL,
surveyYear = NULL,
surveyYearStart = NULL,
surveyYearEnd = NULL,
surveyType = "DHS",
fileFormat = "stata",
fileType = c("HR", "IR","PR"),
f = NULL,
returnFields = NULL,
perPage = NULL,
page = NULL,
client = NULL,
force = FALSE,
all_results = TRUE
) %>%
select(CountryName, SurveyYear, SurveyId, FileType, FileName) %>%
group_by(CountryName) %>%
filter(SurveyYear == max(SurveyYear)) %>%
ungroup()
#Getting datasets
downloads <- get_datasets(datasets$FileName, download_option = "rds")
# get the name of the country
data2 <- as.data.frame(downloads) %>%
pivot_longer(cols = everything(), names_to = "country_code", values_to = "url")
for (i in data2$country_code){
print(i)
temp_data <- readRDS(paste0(downloads[i]))
saveRDS(temp_data, paste0(i, ".rds"))
rm(temp_data)
}
for (i in data2$country_code){
print(i)
temp_data <- readRDS(paste0(i,".rds"))
write_dta(temp_data, paste0(i, ".dta"))
rm(temp_data)
}
par(cex = 1.5)
trade <- read.csv("data/trade.csv", stringsAsFactors = FALSE)
View(trade)
library(igraph)
install.packages("igraph")
library(igraph)
library(tidyverse)
trade <- read.csv("trade.csv", stringsAsFactors = FALSE)
new_trade <- read.csv("Dyadic_COW_4.0.csv", stringsAsFactors = FALSE)
View(new_trade)
View(trade)
matrice <- matrix(c(1,2,3,4), nrow = 2, ncol = 2)
matrice
matrice[1, ]
matrice
matrice[1, ]
matrice[matrice == 1] <- 5
matrice
# Définition des valeurs x sur un intervalle large pour bien voir la courbe
x <- seq(-4, 4, length=100)
# Calcul des densités de probabilité associées
y <- dnorm(x, mean=0, sd=1)
# Tracé de la courbe
plot(x, y, type="l", col="blue", lwd=2, main="Densité de la loi normale centrée réduite",
xlab="x", ylab="Densité", ylim=c(0, 0.45))
# Ajout d'une ligne horizontale pour mieux visualiser l'axe des abscisses
abline(h=0, col="black")
# Chargement du package ggplot2
library(ggplot2)
# Création d'un data frame contenant les valeurs x et leurs densités associées
data <- data.frame(x = seq(-4, 4, length=100))
data$y <- dnorm(data$x, mean=0, sd=1)
# Tracé avec ggplot2
ggplot(data, aes(x = x, y = y)) +
geom_line(color = "blue", size = 1) +
labs(title = "Densité de la loi normale centrée réduite",
x = "x",
y = "Densité") +
theme_minimal()
# Chargement du package ggplot2
library(ggplot2)
# Définition des valeurs x pour les deux distributions
x_standard <- seq(-4, 4, length=100)
x_custom <- seq(25, 60, length=100)
# Création des densités associées
df_standard <- data.frame(x = x_standard, y = dnorm(x_standard, mean = 0, sd = 1), type = "N(0,1)")
df_custom <- data.frame(x = x_custom, y = dnorm(x_custom, mean = 42, sd = 4.68), type = "N(42,4.68)")
# Fusion des données
df <- rbind(df_standard, df_custom)
# Création de la zone pour P(X ≥ 48)
x_shaded <- seq(48, 60, length=50)
df_shaded <- data.frame(x = x_shaded, y = dnorm(x_shaded, mean = 42, sd = 4.68))
# Tracé avec ggplot2
ggplot(df, aes(x = x, y = y, color = type)) +
geom_line(size = 1) +
scale_color_manual(values = c("blue", "green")) +
geom_ribbon(data = df_shaded, aes(ymax = y, ymin = 0), fill = "red", alpha = 0.4) +
labs(title = "Comparaison de deux lois normales",
x = "x",
y = "Densité") +
theme_minimal()
# Chargement du package ggplot2
library(ggplot2)
# Définition des valeurs x pour les deux distributions
x_standard <- seq(-4, 4, length=100)
x_custom <- seq(25, 60, length=100)
# Création des densités associées
df_standard <- data.frame(x = x_standard, y = dnorm(x_standard, mean = 0, sd = 1), type = "N(0,1)")
df_custom <- data.frame(x = x_custom, y = dnorm(x_custom, mean = 42, sd = 4.68), type = "N(42,4.68)")
# Fusion des données
df <- rbind(df_standard, df_custom)
# Création de la zone pour P(X ≥ 48)
x_shaded <- seq(48, 60, length=50)
df_shaded <- data.frame(x = x_shaded, y = dnorm(x_shaded, mean = 42, sd = 4.68))
# Tracé avec ggplot2
ggplot(df, aes(x = x, y = y) +
geom_line(size = 1) +
scale_color_manual(values = c("blue", "green")) +
geom_ribbon(data = df_shaded, aes(ymax = y, ymin = 0), fill = "red", alpha = 0.4) +
labs(title = "Comparaison de deux lois normales",
x = "x",
y = "Densité") +
theme_minimal()
# Chargement du package ggplot2
library(ggplot2)
# Définition des valeurs x pour les deux distributions
x_standard <- seq(-4, 4, length=100)
x_custom <- seq(25, 60, length=100)
# Création des densités associées
df_standard <- data.frame(x = x_standard, y = dnorm(x_standard, mean = 0, sd = 1), type = "N(0,1)")
df_custom <- data.frame(x = x_custom, y = dnorm(x_custom, mean = 42, sd = 4.68), type = "N(42,4.68)")
# Fusion des données
df <- rbind(df_standard, df_custom)
# Création de la zone pour P(X ≥ 48)
x_shaded <- seq(48, 60, length=50)
df_shaded <- data.frame(x = x_shaded, y = dnorm(x_shaded, mean = 42, sd = 4.68))
# Tracé avec ggplot2
ggplot(df, aes(x = x, y = y)) +
geom_line(size = 1) +
scale_color_manual(values = c("blue", "green")) +
geom_ribbon(data = df_shaded, aes(ymax = y, ymin = 0), fill = "red", alpha = 0.4) +
labs(title = "Comparaison de deux lois normales",
x = "x",
y = "Densité") +
theme_minimal()
# Chargement du package ggplot2
library(ggplot2)
# Définition des valeurs x sur un intervalle adapté
x_values <- seq(20, 64, length=200)
# Définition des écart-types
sigma_values <- c(3, 6, 9)
colors <- c("blue", "red", "green")
# Création d'un data frame contenant les trois distributions
df <- data.frame(
x = rep(x_values, 3),
y = c(dnorm(x_values, mean = 42, sd = sigma_values[1]),
dnorm(x_values, mean = 42, sd = sigma_values[2]),
dnorm(x_values, mean = 42, sd = sigma_values[3])),
group = rep(paste("σ =", sigma_values), each = length(x_values))
)
# Création de la zone pour P(X ≥ 48) pour chaque écart-type
df_shaded <- do.call(rbind, lapply(1:3, function(i) {
x_shaded <- seq(48, 64, length=50)
data.frame(
x = x_shaded,
y = dnorm(x_shaded, mean = 42, sd = sigma_values[i]),
group = paste("σ =", sigma_values[i])
)
}))
# Tracé des courbes avec ggplot2
ggplot(df, aes(x = x, y = y, color = group)) +
geom_line(size = 1) +
scale_color_manual(values = colors) +
geom_ribbon(data = df_shaded, aes(ymax = y, ymin = 0, fill = group), alpha = 0.3) +
scale_fill_manual(values = colors) +
labs(title = "Comparaison de trois lois normales avec P(X ≥ 48)",
x = "x",
y = "Densité",
color = "Écart-type",
fill = "P(X ≥ 48)") +
theme_minimal()
3600*90 + 4200*45
513000/60
8*26
8550/208
8550/208
8550/240
30*2500/100
30*25/100
100000*400
library(rsconnect)
rsconnect::setAccountInfo(name='collectelome', token='3C7FDEA92D5C8A2DDFD957F461138B24', secret='p+7RwHkp7BpuJ+B7N6eupC5l64PmW2ZqFuXuoIte')
rsconnect::deployApp('.')
rsconnect::deployApp('')
rsconnect::deployApp
rsconnect::deployApp('.')
getwd()
list.files()
rsconnect::deployApp('"~/Mon_Repo_Github/shiny-collecte-lome"')
rsconnect::deployApp('~/Mon_Repo_Github/shiny-collecte-lome')
setwd('~/Mon_Repo_Github/shiny-collecte-lome')
shiny::runApp()
runApp()
